def dateString = getDate()
group 'com.fbdev.helios'


def javaVersion = JavaVersion.VERSION_21

//version dateString
version dateString + '-SNAPSHOT'

String packageDir = getLayout().getBuildDirectory().dir("packageDir").get()

apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    //include local jars
    testImplementation fileTree(dir: 'lib', include: ['*.jar', '*/*.jar'])
}

def static getDate() {
    String date = new Date().format('yyMMdd')
    date.substring(0,2) + "." + date.substring(2)
}

// Java
java.toolchain {
    languageVersion.set(JavaLanguageVersion.of(javaVersion.getMajorVersion()))
    assert JavaVersion.current().isCompatibleWith(javaVersion): "Java " + javaVersion + " or newer is required"
    println("Java version: " + JavaVersion.current())
}

jar {
    manifest {
        attributes 'Implementation-Title': rootProject.name,
                   'Implementation-Version': archiveVersion
    }
    getArchiveBaseName().set(rootProject.name)
    destinationDirectory = file(packageDir)
    doLast {
        println("Creating jar: " + getArchiveFileName().getOrNull() +
                " in folder: " + getDestinationDirectory().getOrNull())
    }
}

tasks.register('jarWithSources', org.gradle.jvm.tasks.Jar) {
    from sourceSets.main.allSource
    manifest {
        attributes 'Implementation-Title': rootProject.name,
                'Implementation-Version': archiveVersion
    }
    getArchiveFileName().set(rootProject.name + "-binsrc-${project.version}.jar")
    destinationDirectory = file(packageDir)
    with jar
    doLast {
        println("Creating jar with sources: " + getArchiveFileName().getOrNull() +
                " in folder: " + getDestinationDirectory().getOrNull())
    }
}